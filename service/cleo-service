#!/bin/sh
# usage: sudo cleo-service install (service|path) [alias]
#        sudo cleo-service remove  service
#
# The script creates an upstart configuration in /etc/init/$servicename
# and links the $servicename scripts in /etc/init.d, which typically
# requires sudo.
#
# On install, if the installation [path] is not explicitly supplied, the
# script looks for the service installation in some "usual suspects"
# locations.  If the service can not be found, you must explicitly supply
# the installation path on install.

# usage:   etag $url
# returns: the ETag for $url, or error if the connection fails
etag () {
    local url
    url=$1
    if headers=`wget -S --spider -nv $url 2>&1`; then
        echo $headers | sed -n 's/.*ETag: *"\(.*\)".*/\1/p'
    else
        echo error
    fi
}

# usage:   download $url $target
# returns: the downloaded file name
download() {
    local url target tag tagfile
    url=$1
    target=$2
    tag=$(etag $url)
    tagfile=$target.etag
    if [ "$tag" = "error" ]; then
        echo "connection error: reusing cached $target" 1>&2
        echo $target; return
    elif [ -f $tagfile -a "$tag" ]; then
        if [ "$tag" = $(cat $tagfile 2>/dev/null) ] ; then
            echo "cache etag matches: reusing cached $target" 1>&2
            echo $target
            return
        fi
    fi
    # download the target
    echo "downloading $target from $url (tag=$tag file=$(cat $tagfile 2>/dev/null))" 1>&2
    wget -nv -q -O $target $url
    if [ "$tag" ]; then
        echo $tag > $tagfile
    fi
    echo $target
}

#
# Check for update
#
if [ "$1" = "update" ]; then
  download 'https://raw.githubusercontent.com/jthielens/versalex-ops/master/service/cleo-service' $0 > /dev/null
  exit 0
fi

#
# Make sure the command is install or remove
#
if ! [ "$1" = "install" -o "$1" = "remove" ]; then
  echo "usage: $0 install (cleo-service|/path/where/installed) [alias]" 2>&1
  echo "       $0 remove   cleo-service" 2>&1
  echo "       $0 update" 2>&1
  exit 1
fi
op=$1
CLEOHOME=.
init=`ps -p1 | grep systemd > /dev/null && echo systemd || echo upstart`
if [ $init = upstart ]; then
  if [ $(printf "1.4\n$(initctl --version | sed -n 's/.*upstart \([0-9\.]*\).*/\1/p')" | sort -V | head -1) != "1.4" ]; then
    oldupstart=true
  fi
fi

#
# Validate the service name and set up service-dependent variables
#
if [ $op = "remove" ]; then
  servicename=$2
elif [ "$2" = "cleo-report" -o -e "$2/bin/CleoJRServerd" ]; then
  servicename=cleo-report
  servicedisplay="Cleo Report Server"
  installdefault=JReport/CleoServer
  proofofinstall=bin/CleoJRServerd
  exec='$CLEOHOME/bin/NJRServer.sh > $CLEOHOME/logs/CleoJRServerd.log 2>&1'
  stop='$CLEOHOME/bin/CmdSender.sh localshutdown'
  preloop='PORT=`grep ^httpserver.port= $CLEOHOME/bin/server.properties | cut -d= -f2`'
  startloop='while ! netstat -tln4 | grep ":$PORT " > /dev/null 2>&1 && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  stoploop='while netstat -tln4 | grep ":$PORT " > /dev/null 2>&1 && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  if ! [ "$2" = "$servicename" ]; then CLEOHOME=$2; fi
elif [ "$2" = "cleo-harmony" -o -e "$2/Harmonyd" ]; then
  servicename=cleo-harmony
  servicedisplay="Cleo Harmony"
  installdefault=Harmony
  proofofinstall=Harmonyd
  exec='$CLEOHOME/Harmonyc -s service'
  stop='$CLEOHOME/Harmonyc -s service,stop'
  preloop=:
  startloop='while ! grep rmiPort $CLEOHOME/schedule.lck > /dev/null 2>&1 && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  stoploop='while [ -e $CLEOHOME/schedule.lck ] && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  if ! [ "$2" = "$servicename" ]; then CLEOHOME=$2; fi
elif [ "$2" = "cleo-vltrader" -o -e "$2/VLTraderd" ]; then
  servicename=cleo-vltrader
  servicedisplay="Cleo VLTrader"
  installdefault=VLTrader
  proofofinstall=VLTraderd
  exec='$CLEOHOME/VLTraderc -s service'
  stop='$CLEOHOME/VLTraderc -s service,stop'
  preloop=:
  startloop='while ! grep rmiPort $CLEOHOME/schedule.lck > /dev/null 2>&1 && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  stoploop='while [ -e $CLEOHOME/schedule.lck ] && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  if ! [ "$2" = "$servicename" ]; then CLEOHOME=$2; fi
elif [ "$2" = "cleo-vlproxy" -o -e "$2/VLProxyd" ]; then
  servicename=cleo-vlproxy
  servicedisplay="Cleo Proxy"
  installdefault=VLProxy
  proofofinstall=VLProxyd
  exec='$CLEOHOME/VLProxyc -s service'
  stop='$CLEOHOME/VLProxyc -s service,stop'
  preloop=:
  startloop='while ! grep rmiPort $CLEOHOME/schedule.lck > /dev/null 2>&1 && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  stoploop='while [ -e $CLEOHOME/schedule.lck ] && kill -0 $MAINPID > /dev/null 2>&1; do sleep 1; done'
  if ! [ "$2" = "$servicename" ]; then CLEOHOME=$2; fi
else
  if [ -e $2 -o ${2#*/} != $2 ]; then
    echo "error: no Cleo service found in $2" 2>&1
  else
    echo "error: service name must be cleo-report, cleo-harmony, cleo-vltrader, or cleo-vlproxy: $2" 2>&1
  fi
  exit 1
fi

#
# Find or set CLEOHOME for op=install
#
if [ "$op" = "install" ]; then
  if [ "$3" ]; then
    servicename=$3
  fi
  if [ $CLEOHOME = . ]; then
    if ! [ -e "$CLEOHOME/$proofofinstall" ]; then
      CLEOHOME=./$installdefault
      if ! [ -e "$CLEOHOME/$proofofinstall" ]; then
        CLEOHOME=$HOME/$installdefault
        if ! [ -e "$CLEOHOME/$proofofinstall" ]; then
          echo "error: path to $servicedisplay installation required" 1>&2
          exit 1
        fi
      fi
    fi
  fi
  CLEOHOME=$(cd $CLEOHOME && pwd -P)
fi

# If that worked, set up the $servicename service in systemd or upstart as appropriate.

if [ "$init" = "systemd" ]; then
  # shiny new systemd init system
  if [ "$op" = "install" ]; then
    # if cat - << SHELL
    if ! tee /lib/systemd/system/$servicename.service > /dev/null << SHELL
[Unit]
Description=$servicedisplay

[Service]
Type=simple
User=`stat -c '%U' $CLEOHOME/$proofofinstall`
Group=`stat -c '%G' $CLEOHOME/$proofofinstall`
Environment=CLEOHOME=$CLEOHOME
ExecStart=${exec//\$CLEOHOME/$CLEOHOME}
ExecStartPost=/bin/sh -ec '/bin/echo \$MAINPID>$CLEOHOME/cleo.pid;${preloop//\$CLEOHOME/CLEOHOME}; ${startloop//\$CLEOHOME/$CLEOHOME}'
ExecStop=/bin/sh -ec '${stop//\$CLEOHOME/$CLEOHOME};${preloop//\$CLEOHOME/$CLEOHOME};${stoploop//\$CLEOHOME/$CLEOHOME};/bin/rm $CLEOHOME/cleo.pid'

[Install]
WantedBy=multi-user.target
SHELL
    then
      echo "error: cannot install $servicename: perhaps you forgot to sudo?" 1>&2
    else
      systemctl enable /lib/systemd/system/$servicename.service
    fi
  else
    # op=remove
    if [ -e /lib/systemd/system/$servicename.service ]; then
      # if systemctl disable $servicename > /dev/null 2>&1; then
      if systemctl disable $servicename; then
        systemctl stop $servicename > /dev/null 2>&1
        rm /lib/systemd/system/$servicename.service
      else
        echo "error: cannot remove $servicename: perhaps you forgot to sudo?" 1>&2
        exit 1
      fi
    else
      echo "error: $servicename is not registered"
      exit 1
    fi
  fi
else
  # older upstart init system
  if [ "$op" = "install" ]; then
    runuid=`stat -c '%U' $CLEOHOME/$proofofinstall`
    rungid=`stat -c '%G' $CLEOHOME/$proofofinstall`
    if [ $oldupstart ]; then
      exec=su -c \'$exec\' $runuid
      suppress='#'
    fi
    # if cat - << SHELL
    if ! tee /etc/init/$servicename.conf > /dev/null << SHELL
# $servicedisplay

description     "$servicedisplay"
author          "John Thielens <jthielens at cleo.com>"

env CLEOHOME=$CLEOHOME

start on runlevel [2345]
stop on starting rc RUNLEVEL=[016]

${suppress}setuid $runuid
${suppress}setgid $rungid
exec $exec

post-start script
  MAINPID=\`initctl status $servicename | cut -d ' ' -f 4\`
  $preloop
  $startloop
end script

pre-stop script
  MAINPID=\`initctl status $servicename | cut -d ' ' -f 4\`
  $stop
  $preloop
  $stoploop
end script
SHELL
    then
      echo "error: cannot install $servicename: perhaps you forgot to sudo?" 1>&2
    else
      ln -s /lib/init/upstart-job /etc/init.d/$servicename
      initctl reload-configuration
    fi
  else
    # op=remove
    if [ -e /etc/init/$servicename.conf ]; then
      if [ -w /etc/init ]; then
        initctl stop $servicename > /dev/null 2>&1
        rm /etc/init/$servicename.conf
        rm /etc/init.d/$servicename
        initctl reload-configuration
      else
        echo "error: cannot remove $servicename: perhaps you forgot to sudo?" 1>&2
        exit 1
      fi
    else
      echo "error: $servicename is not registered"
      exit 1
    fi
  fi
fi
